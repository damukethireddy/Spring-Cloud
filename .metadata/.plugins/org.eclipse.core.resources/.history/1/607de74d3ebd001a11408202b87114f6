package com.tonsaito.mm.currency.conversion.service.controller;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.damo.currency.conversion.service.bean.CurrencyConversionBean;
import com.tonsaito.mm.currency.conversion.service.service.CurrencyExchangeServiceProxy;

@RestController
@RequestMapping("/currency-converter")
public class CurrencyConversionController {
	Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private CurrencyExchangeServiceProxy currencyExchangeService;

	@GetMapping("/feign/from/{from}/to/{to}/quantity/{quantity}")
	public CurrencyConversionBean convertCurrencyFeign(@PathVariable String from, @PathVariable String to, @PathVariable BigDecimal quantity) {
		CurrencyConversionBean response = currencyExchangeService.retrieveExchangeValue(from, to);
		
		return new CurrencyConversionBean(response.getId(), 
				from, 
				to, 
				response.getConversionMultiple(), 
				quantity, quantity.multiply(response.getConversionMultiple()), 
				response.getPort());
	}

	@GetMapping("/from/{from}/to/{to}/quantity/{quantity}")
	public CurrencyConversionBean convertCurrency(@PathVariable String from, @PathVariable String to, @PathVariable BigDecimal quantity) {
		
		Map<String, String> uriVariables = new HashMap<String, String>();
		uriVariables.put("from", from);
		uriVariables.put("to", to);
		
		ResponseEntity<CurrencyConversionBean> responseEntity = new RestTemplate().getForEntity("http://localhost:8001/currency-exchange/from/{from}/to/{to}", CurrencyConversionBean.class, uriVariables );
		CurrencyConversionBean response = responseEntity.getBody();
		logger.info("{}", response);
		
		
		return new CurrencyConversionBean(response.getId(), 
				from, 
				to, 
				response.getConversionMultiple(), 
				quantity, quantity.multiply(response.getConversionMultiple()), 
				response.getPort());
	}
}
